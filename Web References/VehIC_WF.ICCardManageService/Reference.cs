//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace VehIC_WF.ICCardManageService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ICCardManageServiceSoap", Namespace="http://tempuri.org/")]
    public partial class ICCardManageService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ISFixVehOperationCompleted;
        
        private System.Threading.SendOrPostCallback RFVehCardAssignOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegOperListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehTypeByVehNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCardOwnerListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegistryCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCardNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegistryLostOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegistryOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback CardInitOperationCompleted;
        
        private System.Threading.SendOrPostCallback OneCardInitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCardExOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCardExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperCardBillOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperCardBillExOperationCompleted;
        
        private System.Threading.SendOrPostCallback OperCardAssignOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFixVehCardBillOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFixVehCardBillExOperationCompleted;
        
        private System.Threading.SendOrPostCallback FixVehCardAssignOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehTypeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableVehNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoseCardVehNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableBillInfosOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBill_ArrivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBill_ArrivesExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBill_FYDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBill_QTWZOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBill_XHWZOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenNoticeBillOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehNoFromICIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAvailableVehNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBillByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAvailableVehNoOfRFFYDOperationCompleted;
        
        private System.Threading.SendOrPostCallback TTCardInitOperationCompleted;
        
        private System.Threading.SendOrPostCallback ISExistTaskOfVehNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RFVehCardCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback RoadBrakeLogOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ICCardManageService() {
            this.Url = global::Properties.Settings.Default.VehIC_WF_VehIC_WF_ICCardManageService_ICCardManageService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ISFixVehCompletedEventHandler ISFixVehCompleted;
        
        /// <remarks/>
        public event RFVehCardAssignCompletedEventHandler RFVehCardAssignCompleted;
        
        /// <remarks/>
        public event GetRegOperListCompletedEventHandler GetRegOperListCompleted;
        
        /// <remarks/>
        public event GetVehTypeByVehNoCompletedEventHandler GetVehTypeByVehNoCompleted;
        
        /// <remarks/>
        public event GetCardOwnerListCompletedEventHandler GetCardOwnerListCompleted;
        
        /// <remarks/>
        public event RegistryCardCompletedEventHandler RegistryCardCompleted;
        
        /// <remarks/>
        public event UpdateCardNoCompletedEventHandler UpdateCardNoCompleted;
        
        /// <remarks/>
        public event RegistryLostCompletedEventHandler RegistryLostCompleted;
        
        /// <remarks/>
        public event RegistryOutCompletedEventHandler RegistryOutCompleted;
        
        /// <remarks/>
        public event CardInitCompletedEventHandler CardInitCompleted;
        
        /// <remarks/>
        public event OneCardInitCompletedEventHandler OneCardInitCompleted;
        
        /// <remarks/>
        public event GetCardCompletedEventHandler GetCardCompleted;
        
        /// <remarks/>
        public event GetCardExCompletedEventHandler GetCardExCompleted;
        
        /// <remarks/>
        public event QueryCardExCompletedEventHandler QueryCardExCompleted;
        
        /// <remarks/>
        public event GetOperCardBillCompletedEventHandler GetOperCardBillCompleted;
        
        /// <remarks/>
        public event GetOperCardBillExCompletedEventHandler GetOperCardBillExCompleted;
        
        /// <remarks/>
        public event OperCardAssignCompletedEventHandler OperCardAssignCompleted;
        
        /// <remarks/>
        public event GetFixVehCardBillCompletedEventHandler GetFixVehCardBillCompleted;
        
        /// <remarks/>
        public event GetFixVehCardBillExCompletedEventHandler GetFixVehCardBillExCompleted;
        
        /// <remarks/>
        public event FixVehCardAssignCompletedEventHandler FixVehCardAssignCompleted;
        
        /// <remarks/>
        public event GetVehTypeListCompletedEventHandler GetVehTypeListCompleted;
        
        /// <remarks/>
        public event GetAvailableVehNoCompletedEventHandler GetAvailableVehNoCompleted;
        
        /// <remarks/>
        public event GetLoseCardVehNoCompletedEventHandler GetLoseCardVehNoCompleted;
        
        /// <remarks/>
        public event GetAvailableBillInfosCompletedEventHandler GetAvailableBillInfosCompleted;
        
        /// <remarks/>
        public event GetBill_ArrivesCompletedEventHandler GetBill_ArrivesCompleted;
        
        /// <remarks/>
        public event GetBill_ArrivesExCompletedEventHandler GetBill_ArrivesExCompleted;
        
        /// <remarks/>
        public event GetBill_FYDCompletedEventHandler GetBill_FYDCompleted;
        
        /// <remarks/>
        public event GetBill_QTWZCompletedEventHandler GetBill_QTWZCompleted;
        
        /// <remarks/>
        public event GetBill_XHWZCompletedEventHandler GetBill_XHWZCompleted;
        
        /// <remarks/>
        public event GenNoticeBillCompletedEventHandler GenNoticeBillCompleted;
        
        /// <remarks/>
        public event GetVehNoFromICIDCompletedEventHandler GetVehNoFromICIDCompleted;
        
        /// <remarks/>
        public event QueryAvailableVehNoCompletedEventHandler QueryAvailableVehNoCompleted;
        
        /// <remarks/>
        public event QueryBillByUserIDCompletedEventHandler QueryBillByUserIDCompleted;
        
        /// <remarks/>
        public event QueryAvailableVehNoOfRFFYDCompletedEventHandler QueryAvailableVehNoOfRFFYDCompleted;
        
        /// <remarks/>
        public event TTCardInitCompletedEventHandler TTCardInitCompleted;
        
        /// <remarks/>
        public event ISExistTaskOfVehNoCompletedEventHandler ISExistTaskOfVehNoCompleted;
        
        /// <remarks/>
        public event GetVehicInfoCompletedEventHandler GetVehicInfoCompleted;
        
        /// <remarks/>
        public event RFVehCardCancelCompletedEventHandler RFVehCardCancelCompleted;
        
        /// <remarks/>
        public event RoadBrakeLogCompletedEventHandler RoadBrakeLogCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ISFixVeh", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ISFixVeh(string vehno) {
            object[] results = this.Invoke("ISFixVeh", new object[] {
                        vehno});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ISFixVehAsync(string vehno) {
            this.ISFixVehAsync(vehno, null);
        }
        
        /// <remarks/>
        public void ISFixVehAsync(string vehno, object userState) {
            if ((this.ISFixVehOperationCompleted == null)) {
                this.ISFixVehOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISFixVehOperationCompleted);
            }
            this.InvokeAsync("ISFixVeh", new object[] {
                        vehno}, this.ISFixVehOperationCompleted, userState);
        }
        
        private void OnISFixVehOperationCompleted(object arg) {
            if ((this.ISFixVehCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISFixVehCompleted(this, new ISFixVehCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RFVehCardAssign", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result RFVehCardAssign(string icid, string wpcode, string operid, string sourbillno, string vendor, string vehno, string vehtype, bool isfix) {
            object[] results = this.Invoke("RFVehCardAssign", new object[] {
                        icid,
                        wpcode,
                        operid,
                        sourbillno,
                        vendor,
                        vehno,
                        vehtype,
                        isfix});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void RFVehCardAssignAsync(string icid, string wpcode, string operid, string sourbillno, string vendor, string vehno, string vehtype, bool isfix) {
            this.RFVehCardAssignAsync(icid, wpcode, operid, sourbillno, vendor, vehno, vehtype, isfix, null);
        }
        
        /// <remarks/>
        public void RFVehCardAssignAsync(string icid, string wpcode, string operid, string sourbillno, string vendor, string vehno, string vehtype, bool isfix, object userState) {
            if ((this.RFVehCardAssignOperationCompleted == null)) {
                this.RFVehCardAssignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRFVehCardAssignOperationCompleted);
            }
            this.InvokeAsync("RFVehCardAssign", new object[] {
                        icid,
                        wpcode,
                        operid,
                        sourbillno,
                        vendor,
                        vehno,
                        vehtype,
                        isfix}, this.RFVehCardAssignOperationCompleted, userState);
        }
        
        private void OnRFVehCardAssignOperationCompleted(object arg) {
            if ((this.RFVehCardAssignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RFVehCardAssignCompleted(this, new RFVehCardAssignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRegOperList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetRegOperList() {
            object[] results = this.Invoke("GetRegOperList", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRegOperListAsync() {
            this.GetRegOperListAsync(null);
        }
        
        /// <remarks/>
        public void GetRegOperListAsync(object userState) {
            if ((this.GetRegOperListOperationCompleted == null)) {
                this.GetRegOperListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegOperListOperationCompleted);
            }
            this.InvokeAsync("GetRegOperList", new object[0], this.GetRegOperListOperationCompleted, userState);
        }
        
        private void OnGetRegOperListOperationCompleted(object arg) {
            if ((this.GetRegOperListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegOperListCompleted(this, new GetRegOperListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVehTypeByVehNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVehTypeByVehNo(string vehno) {
            object[] results = this.Invoke("GetVehTypeByVehNo", new object[] {
                        vehno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehTypeByVehNoAsync(string vehno) {
            this.GetVehTypeByVehNoAsync(vehno, null);
        }
        
        /// <remarks/>
        public void GetVehTypeByVehNoAsync(string vehno, object userState) {
            if ((this.GetVehTypeByVehNoOperationCompleted == null)) {
                this.GetVehTypeByVehNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehTypeByVehNoOperationCompleted);
            }
            this.InvokeAsync("GetVehTypeByVehNo", new object[] {
                        vehno}, this.GetVehTypeByVehNoOperationCompleted, userState);
        }
        
        private void OnGetVehTypeByVehNoOperationCompleted(object arg) {
            if ((this.GetVehTypeByVehNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehTypeByVehNoCompleted(this, new GetVehTypeByVehNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCardOwnerList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetCardOwnerList() {
            object[] results = this.Invoke("GetCardOwnerList", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCardOwnerListAsync() {
            this.GetCardOwnerListAsync(null);
        }
        
        /// <remarks/>
        public void GetCardOwnerListAsync(object userState) {
            if ((this.GetCardOwnerListOperationCompleted == null)) {
                this.GetCardOwnerListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardOwnerListOperationCompleted);
            }
            this.InvokeAsync("GetCardOwnerList", new object[0], this.GetCardOwnerListOperationCompleted, userState);
        }
        
        private void OnGetCardOwnerListOperationCompleted(object arg) {
            if ((this.GetCardOwnerListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardOwnerListCompleted(this, new GetCardOwnerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegistryCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RegistryCard(string id, string cardno, string oper) {
            object[] results = this.Invoke("RegistryCard", new object[] {
                        id,
                        cardno,
                        oper});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RegistryCardAsync(string id, string cardno, string oper) {
            this.RegistryCardAsync(id, cardno, oper, null);
        }
        
        /// <remarks/>
        public void RegistryCardAsync(string id, string cardno, string oper, object userState) {
            if ((this.RegistryCardOperationCompleted == null)) {
                this.RegistryCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegistryCardOperationCompleted);
            }
            this.InvokeAsync("RegistryCard", new object[] {
                        id,
                        cardno,
                        oper}, this.RegistryCardOperationCompleted, userState);
        }
        
        private void OnRegistryCardOperationCompleted(object arg) {
            if ((this.RegistryCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegistryCardCompleted(this, new RegistryCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCardNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateCardNo(string id, string cardno, string oper) {
            object[] results = this.Invoke("UpdateCardNo", new object[] {
                        id,
                        cardno,
                        oper});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCardNoAsync(string id, string cardno, string oper) {
            this.UpdateCardNoAsync(id, cardno, oper, null);
        }
        
        /// <remarks/>
        public void UpdateCardNoAsync(string id, string cardno, string oper, object userState) {
            if ((this.UpdateCardNoOperationCompleted == null)) {
                this.UpdateCardNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCardNoOperationCompleted);
            }
            this.InvokeAsync("UpdateCardNo", new object[] {
                        id,
                        cardno,
                        oper}, this.UpdateCardNoOperationCompleted, userState);
        }
        
        private void OnUpdateCardNoOperationCompleted(object arg) {
            if ((this.UpdateCardNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCardNoCompleted(this, new UpdateCardNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegistryLost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RegistryLost(string id, string oper) {
            object[] results = this.Invoke("RegistryLost", new object[] {
                        id,
                        oper});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RegistryLostAsync(string id, string oper) {
            this.RegistryLostAsync(id, oper, null);
        }
        
        /// <remarks/>
        public void RegistryLostAsync(string id, string oper, object userState) {
            if ((this.RegistryLostOperationCompleted == null)) {
                this.RegistryLostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegistryLostOperationCompleted);
            }
            this.InvokeAsync("RegistryLost", new object[] {
                        id,
                        oper}, this.RegistryLostOperationCompleted, userState);
        }
        
        private void OnRegistryLostOperationCompleted(object arg) {
            if ((this.RegistryLostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegistryLostCompleted(this, new RegistryLostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegistryOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RegistryOut(string id, string oper) {
            object[] results = this.Invoke("RegistryOut", new object[] {
                        id,
                        oper});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RegistryOutAsync(string id, string oper) {
            this.RegistryOutAsync(id, oper, null);
        }
        
        /// <remarks/>
        public void RegistryOutAsync(string id, string oper, object userState) {
            if ((this.RegistryOutOperationCompleted == null)) {
                this.RegistryOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegistryOutOperationCompleted);
            }
            this.InvokeAsync("RegistryOut", new object[] {
                        id,
                        oper}, this.RegistryOutOperationCompleted, userState);
        }
        
        private void OnRegistryOutOperationCompleted(object arg) {
            if ((this.RegistryOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegistryOutCompleted(this, new RegistryOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CardInit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CardInit(string id, string oper) {
            object[] results = this.Invoke("CardInit", new object[] {
                        id,
                        oper});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CardInitAsync(string id, string oper) {
            this.CardInitAsync(id, oper, null);
        }
        
        /// <remarks/>
        public void CardInitAsync(string id, string oper, object userState) {
            if ((this.CardInitOperationCompleted == null)) {
                this.CardInitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCardInitOperationCompleted);
            }
            this.InvokeAsync("CardInit", new object[] {
                        id,
                        oper}, this.CardInitOperationCompleted, userState);
        }
        
        private void OnCardInitOperationCompleted(object arg) {
            if ((this.CardInitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CardInitCompleted(this, new CardInitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OneCardInit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int OneCardInit(string id, string oper, string billno) {
            object[] results = this.Invoke("OneCardInit", new object[] {
                        id,
                        oper,
                        billno});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void OneCardInitAsync(string id, string oper, string billno) {
            this.OneCardInitAsync(id, oper, billno, null);
        }
        
        /// <remarks/>
        public void OneCardInitAsync(string id, string oper, string billno, object userState) {
            if ((this.OneCardInitOperationCompleted == null)) {
                this.OneCardInitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOneCardInitOperationCompleted);
            }
            this.InvokeAsync("OneCardInit", new object[] {
                        id,
                        oper,
                        billno}, this.OneCardInitOperationCompleted, userState);
        }
        
        private void OnOneCardInitOperationCompleted(object arg) {
            if ((this.OneCardInitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OneCardInitCompleted(this, new OneCardInitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ICCard GetCard(string icno) {
            object[] results = this.Invoke("GetCard", new object[] {
                        icno});
            return ((ICCard)(results[0]));
        }
        
        /// <remarks/>
        public void GetCardAsync(string icno) {
            this.GetCardAsync(icno, null);
        }
        
        /// <remarks/>
        public void GetCardAsync(string icno, object userState) {
            if ((this.GetCardOperationCompleted == null)) {
                this.GetCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardOperationCompleted);
            }
            this.InvokeAsync("GetCard", new object[] {
                        icno}, this.GetCardOperationCompleted, userState);
        }
        
        private void OnGetCardOperationCompleted(object arg) {
            if ((this.GetCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardCompleted(this, new GetCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCardEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ICCard GetCardEx(string cardno) {
            object[] results = this.Invoke("GetCardEx", new object[] {
                        cardno});
            return ((ICCard)(results[0]));
        }
        
        /// <remarks/>
        public void GetCardExAsync(string cardno) {
            this.GetCardExAsync(cardno, null);
        }
        
        /// <remarks/>
        public void GetCardExAsync(string cardno, object userState) {
            if ((this.GetCardExOperationCompleted == null)) {
                this.GetCardExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardExOperationCompleted);
            }
            this.InvokeAsync("GetCardEx", new object[] {
                        cardno}, this.GetCardExOperationCompleted, userState);
        }
        
        private void OnGetCardExOperationCompleted(object arg) {
            if ((this.GetCardExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardExCompleted(this, new GetCardExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryCardEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ICCard[] QueryCardEx(string regoper, string cardno, string begintime, string endtime, string ownerid, int[] astatus, int[] atype) {
            object[] results = this.Invoke("QueryCardEx", new object[] {
                        regoper,
                        cardno,
                        begintime,
                        endtime,
                        ownerid,
                        astatus,
                        atype});
            return ((ICCard[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryCardExAsync(string regoper, string cardno, string begintime, string endtime, string ownerid, int[] astatus, int[] atype) {
            this.QueryCardExAsync(regoper, cardno, begintime, endtime, ownerid, astatus, atype, null);
        }
        
        /// <remarks/>
        public void QueryCardExAsync(string regoper, string cardno, string begintime, string endtime, string ownerid, int[] astatus, int[] atype, object userState) {
            if ((this.QueryCardExOperationCompleted == null)) {
                this.QueryCardExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCardExOperationCompleted);
            }
            this.InvokeAsync("QueryCardEx", new object[] {
                        regoper,
                        cardno,
                        begintime,
                        endtime,
                        ownerid,
                        astatus,
                        atype}, this.QueryCardExOperationCompleted, userState);
        }
        
        private void OnQueryCardExOperationCompleted(object arg) {
            if ((this.QueryCardExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCardExCompleted(this, new QueryCardExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOperCardBill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Bill_OperCard[] GetOperCardBill(string IDNo) {
            object[] results = this.Invoke("GetOperCardBill", new object[] {
                        IDNo});
            return ((Bill_OperCard[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOperCardBillAsync(string IDNo) {
            this.GetOperCardBillAsync(IDNo, null);
        }
        
        /// <remarks/>
        public void GetOperCardBillAsync(string IDNo, object userState) {
            if ((this.GetOperCardBillOperationCompleted == null)) {
                this.GetOperCardBillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperCardBillOperationCompleted);
            }
            this.InvokeAsync("GetOperCardBill", new object[] {
                        IDNo}, this.GetOperCardBillOperationCompleted, userState);
        }
        
        private void OnGetOperCardBillOperationCompleted(object arg) {
            if ((this.GetOperCardBillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperCardBillCompleted(this, new GetOperCardBillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOperCardBillEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Bill_OperCard GetOperCardBillEx(string billno) {
            object[] results = this.Invoke("GetOperCardBillEx", new object[] {
                        billno});
            return ((Bill_OperCard)(results[0]));
        }
        
        /// <remarks/>
        public void GetOperCardBillExAsync(string billno) {
            this.GetOperCardBillExAsync(billno, null);
        }
        
        /// <remarks/>
        public void GetOperCardBillExAsync(string billno, object userState) {
            if ((this.GetOperCardBillExOperationCompleted == null)) {
                this.GetOperCardBillExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperCardBillExOperationCompleted);
            }
            this.InvokeAsync("GetOperCardBillEx", new object[] {
                        billno}, this.GetOperCardBillExOperationCompleted, userState);
        }
        
        private void OnGetOperCardBillExOperationCompleted(object arg) {
            if ((this.GetOperCardBillExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperCardBillExCompleted(this, new GetOperCardBillExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OperCardAssign", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int OperCardAssign(string icid, int ictype, string djh, string operid, string wpcode) {
            object[] results = this.Invoke("OperCardAssign", new object[] {
                        icid,
                        ictype,
                        djh,
                        operid,
                        wpcode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void OperCardAssignAsync(string icid, int ictype, string djh, string operid, string wpcode) {
            this.OperCardAssignAsync(icid, ictype, djh, operid, wpcode, null);
        }
        
        /// <remarks/>
        public void OperCardAssignAsync(string icid, int ictype, string djh, string operid, string wpcode, object userState) {
            if ((this.OperCardAssignOperationCompleted == null)) {
                this.OperCardAssignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOperCardAssignOperationCompleted);
            }
            this.InvokeAsync("OperCardAssign", new object[] {
                        icid,
                        ictype,
                        djh,
                        operid,
                        wpcode}, this.OperCardAssignOperationCompleted, userState);
        }
        
        private void OnOperCardAssignOperationCompleted(object arg) {
            if ((this.OperCardAssignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OperCardAssignCompleted(this, new OperCardAssignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFixVehCardBill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Bill_FixVehCard[] GetFixVehCardBill(string vehid) {
            object[] results = this.Invoke("GetFixVehCardBill", new object[] {
                        vehid});
            return ((Bill_FixVehCard[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFixVehCardBillAsync(string vehid) {
            this.GetFixVehCardBillAsync(vehid, null);
        }
        
        /// <remarks/>
        public void GetFixVehCardBillAsync(string vehid, object userState) {
            if ((this.GetFixVehCardBillOperationCompleted == null)) {
                this.GetFixVehCardBillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFixVehCardBillOperationCompleted);
            }
            this.InvokeAsync("GetFixVehCardBill", new object[] {
                        vehid}, this.GetFixVehCardBillOperationCompleted, userState);
        }
        
        private void OnGetFixVehCardBillOperationCompleted(object arg) {
            if ((this.GetFixVehCardBillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFixVehCardBillCompleted(this, new GetFixVehCardBillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFixVehCardBillEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Bill_FixVehCard GetFixVehCardBillEx(string billno) {
            object[] results = this.Invoke("GetFixVehCardBillEx", new object[] {
                        billno});
            return ((Bill_FixVehCard)(results[0]));
        }
        
        /// <remarks/>
        public void GetFixVehCardBillExAsync(string billno) {
            this.GetFixVehCardBillExAsync(billno, null);
        }
        
        /// <remarks/>
        public void GetFixVehCardBillExAsync(string billno, object userState) {
            if ((this.GetFixVehCardBillExOperationCompleted == null)) {
                this.GetFixVehCardBillExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFixVehCardBillExOperationCompleted);
            }
            this.InvokeAsync("GetFixVehCardBillEx", new object[] {
                        billno}, this.GetFixVehCardBillExOperationCompleted, userState);
        }
        
        private void OnGetFixVehCardBillExOperationCompleted(object arg) {
            if ((this.GetFixVehCardBillExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFixVehCardBillExCompleted(this, new GetFixVehCardBillExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FixVehCardAssign", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FixVehCardAssign(string icid, int ictype, string oper, string billno, string[] vehinfo, string dept, string wpcode) {
            object[] results = this.Invoke("FixVehCardAssign", new object[] {
                        icid,
                        ictype,
                        oper,
                        billno,
                        vehinfo,
                        dept,
                        wpcode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FixVehCardAssignAsync(string icid, int ictype, string oper, string billno, string[] vehinfo, string dept, string wpcode) {
            this.FixVehCardAssignAsync(icid, ictype, oper, billno, vehinfo, dept, wpcode, null);
        }
        
        /// <remarks/>
        public void FixVehCardAssignAsync(string icid, int ictype, string oper, string billno, string[] vehinfo, string dept, string wpcode, object userState) {
            if ((this.FixVehCardAssignOperationCompleted == null)) {
                this.FixVehCardAssignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFixVehCardAssignOperationCompleted);
            }
            this.InvokeAsync("FixVehCardAssign", new object[] {
                        icid,
                        ictype,
                        oper,
                        billno,
                        vehinfo,
                        dept,
                        wpcode}, this.FixVehCardAssignOperationCompleted, userState);
        }
        
        private void OnFixVehCardAssignOperationCompleted(object arg) {
            if ((this.FixVehCardAssignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FixVehCardAssignCompleted(this, new FixVehCardAssignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVehTypeList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetVehTypeList() {
            object[] results = this.Invoke("GetVehTypeList", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVehTypeListAsync() {
            this.GetVehTypeListAsync(null);
        }
        
        /// <remarks/>
        public void GetVehTypeListAsync(object userState) {
            if ((this.GetVehTypeListOperationCompleted == null)) {
                this.GetVehTypeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehTypeListOperationCompleted);
            }
            this.InvokeAsync("GetVehTypeList", new object[0], this.GetVehTypeListOperationCompleted, userState);
        }
        
        private void OnGetVehTypeListOperationCompleted(object arg) {
            if ((this.GetVehTypeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehTypeListCompleted(this, new GetVehTypeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAvailableVehNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetAvailableVehNo(string cph) {
            object[] results = this.Invoke("GetAvailableVehNo", new object[] {
                        cph});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableVehNoAsync(string cph) {
            this.GetAvailableVehNoAsync(cph, null);
        }
        
        /// <remarks/>
        public void GetAvailableVehNoAsync(string cph, object userState) {
            if ((this.GetAvailableVehNoOperationCompleted == null)) {
                this.GetAvailableVehNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableVehNoOperationCompleted);
            }
            this.InvokeAsync("GetAvailableVehNo", new object[] {
                        cph}, this.GetAvailableVehNoOperationCompleted, userState);
        }
        
        private void OnGetAvailableVehNoOperationCompleted(object arg) {
            if ((this.GetAvailableVehNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableVehNoCompleted(this, new GetAvailableVehNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLoseCardVehNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetLoseCardVehNo(string cph) {
            object[] results = this.Invoke("GetLoseCardVehNo", new object[] {
                        cph});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLoseCardVehNoAsync(string cph) {
            this.GetLoseCardVehNoAsync(cph, null);
        }
        
        /// <remarks/>
        public void GetLoseCardVehNoAsync(string cph, object userState) {
            if ((this.GetLoseCardVehNoOperationCompleted == null)) {
                this.GetLoseCardVehNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoseCardVehNoOperationCompleted);
            }
            this.InvokeAsync("GetLoseCardVehNo", new object[] {
                        cph}, this.GetLoseCardVehNoOperationCompleted, userState);
        }
        
        private void OnGetLoseCardVehNoOperationCompleted(object arg) {
            if ((this.GetLoseCardVehNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoseCardVehNoCompleted(this, new GetLoseCardVehNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAvailableBillInfos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AvailableBillInfo[] GetAvailableBillInfos(string cph) {
            object[] results = this.Invoke("GetAvailableBillInfos", new object[] {
                        cph});
            return ((AvailableBillInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableBillInfosAsync(string cph) {
            this.GetAvailableBillInfosAsync(cph, null);
        }
        
        /// <remarks/>
        public void GetAvailableBillInfosAsync(string cph, object userState) {
            if ((this.GetAvailableBillInfosOperationCompleted == null)) {
                this.GetAvailableBillInfosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableBillInfosOperationCompleted);
            }
            this.InvokeAsync("GetAvailableBillInfos", new object[] {
                        cph}, this.GetAvailableBillInfosOperationCompleted, userState);
        }
        
        private void OnGetAvailableBillInfosOperationCompleted(object arg) {
            if ((this.GetAvailableBillInfosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableBillInfosCompleted(this, new GetAvailableBillInfosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBill_Arrives", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Bill_Available[] GetBill_Arrives(string cph, string wzlx) {
            object[] results = this.Invoke("GetBill_Arrives", new object[] {
                        cph,
                        wzlx});
            return ((Bill_Available[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBill_ArrivesAsync(string cph, string wzlx) {
            this.GetBill_ArrivesAsync(cph, wzlx, null);
        }
        
        /// <remarks/>
        public void GetBill_ArrivesAsync(string cph, string wzlx, object userState) {
            if ((this.GetBill_ArrivesOperationCompleted == null)) {
                this.GetBill_ArrivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBill_ArrivesOperationCompleted);
            }
            this.InvokeAsync("GetBill_Arrives", new object[] {
                        cph,
                        wzlx}, this.GetBill_ArrivesOperationCompleted, userState);
        }
        
        private void OnGetBill_ArrivesOperationCompleted(object arg) {
            if ((this.GetBill_ArrivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBill_ArrivesCompleted(this, new GetBill_ArrivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBill_ArrivesEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Bill_Available[] GetBill_ArrivesEx(string cph, string noticebillid) {
            object[] results = this.Invoke("GetBill_ArrivesEx", new object[] {
                        cph,
                        noticebillid});
            return ((Bill_Available[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBill_ArrivesExAsync(string cph, string noticebillid) {
            this.GetBill_ArrivesExAsync(cph, noticebillid, null);
        }
        
        /// <remarks/>
        public void GetBill_ArrivesExAsync(string cph, string noticebillid, object userState) {
            if ((this.GetBill_ArrivesExOperationCompleted == null)) {
                this.GetBill_ArrivesExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBill_ArrivesExOperationCompleted);
            }
            this.InvokeAsync("GetBill_ArrivesEx", new object[] {
                        cph,
                        noticebillid}, this.GetBill_ArrivesExOperationCompleted, userState);
        }
        
        private void OnGetBill_ArrivesExOperationCompleted(object arg) {
            if ((this.GetBill_ArrivesExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBill_ArrivesExCompleted(this, new GetBill_ArrivesExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBill_FYD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Bill_Available[] GetBill_FYD(string cph, string wzlx) {
            object[] results = this.Invoke("GetBill_FYD", new object[] {
                        cph,
                        wzlx});
            return ((Bill_Available[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBill_FYDAsync(string cph, string wzlx) {
            this.GetBill_FYDAsync(cph, wzlx, null);
        }
        
        /// <remarks/>
        public void GetBill_FYDAsync(string cph, string wzlx, object userState) {
            if ((this.GetBill_FYDOperationCompleted == null)) {
                this.GetBill_FYDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBill_FYDOperationCompleted);
            }
            this.InvokeAsync("GetBill_FYD", new object[] {
                        cph,
                        wzlx}, this.GetBill_FYDOperationCompleted, userState);
        }
        
        private void OnGetBill_FYDOperationCompleted(object arg) {
            if ((this.GetBill_FYDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBill_FYDCompleted(this, new GetBill_FYDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBill_QTWZ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Bill_Available[] GetBill_QTWZ(string cph, string billtype, bool needweigh) {
            object[] results = this.Invoke("GetBill_QTWZ", new object[] {
                        cph,
                        billtype,
                        needweigh});
            return ((Bill_Available[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBill_QTWZAsync(string cph, string billtype, bool needweigh) {
            this.GetBill_QTWZAsync(cph, billtype, needweigh, null);
        }
        
        /// <remarks/>
        public void GetBill_QTWZAsync(string cph, string billtype, bool needweigh, object userState) {
            if ((this.GetBill_QTWZOperationCompleted == null)) {
                this.GetBill_QTWZOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBill_QTWZOperationCompleted);
            }
            this.InvokeAsync("GetBill_QTWZ", new object[] {
                        cph,
                        billtype,
                        needweigh}, this.GetBill_QTWZOperationCompleted, userState);
        }
        
        private void OnGetBill_QTWZOperationCompleted(object arg) {
            if ((this.GetBill_QTWZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBill_QTWZCompleted(this, new GetBill_QTWZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBill_XHWZ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Bill_Available[] GetBill_XHWZ(string cph, string billtype, bool needweigh) {
            object[] results = this.Invoke("GetBill_XHWZ", new object[] {
                        cph,
                        billtype,
                        needweigh});
            return ((Bill_Available[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBill_XHWZAsync(string cph, string billtype, bool needweigh) {
            this.GetBill_XHWZAsync(cph, billtype, needweigh, null);
        }
        
        /// <remarks/>
        public void GetBill_XHWZAsync(string cph, string billtype, bool needweigh, object userState) {
            if ((this.GetBill_XHWZOperationCompleted == null)) {
                this.GetBill_XHWZOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBill_XHWZOperationCompleted);
            }
            this.InvokeAsync("GetBill_XHWZ", new object[] {
                        cph,
                        billtype,
                        needweigh}, this.GetBill_XHWZOperationCompleted, userState);
        }
        
        private void OnGetBill_XHWZOperationCompleted(object arg) {
            if ((this.GetBill_XHWZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBill_XHWZCompleted(this, new GetBill_XHWZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenNoticeBill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenNoticeBill(string[] Items, string operid, string icid, string[] vehinfo, AvailableBillInfo billinfo, string remark, string wpcode) {
            object[] results = this.Invoke("GenNoticeBill", new object[] {
                        Items,
                        operid,
                        icid,
                        vehinfo,
                        billinfo,
                        remark,
                        wpcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenNoticeBillAsync(string[] Items, string operid, string icid, string[] vehinfo, AvailableBillInfo billinfo, string remark, string wpcode) {
            this.GenNoticeBillAsync(Items, operid, icid, vehinfo, billinfo, remark, wpcode, null);
        }
        
        /// <remarks/>
        public void GenNoticeBillAsync(string[] Items, string operid, string icid, string[] vehinfo, AvailableBillInfo billinfo, string remark, string wpcode, object userState) {
            if ((this.GenNoticeBillOperationCompleted == null)) {
                this.GenNoticeBillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenNoticeBillOperationCompleted);
            }
            this.InvokeAsync("GenNoticeBill", new object[] {
                        Items,
                        operid,
                        icid,
                        vehinfo,
                        billinfo,
                        remark,
                        wpcode}, this.GenNoticeBillOperationCompleted, userState);
        }
        
        private void OnGenNoticeBillOperationCompleted(object arg) {
            if ((this.GenNoticeBillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenNoticeBillCompleted(this, new GenNoticeBillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVehNoFromICID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetVehNoFromICID(string icid) {
            object[] results = this.Invoke("GetVehNoFromICID", new object[] {
                        icid});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVehNoFromICIDAsync(string icid) {
            this.GetVehNoFromICIDAsync(icid, null);
        }
        
        /// <remarks/>
        public void GetVehNoFromICIDAsync(string icid, object userState) {
            if ((this.GetVehNoFromICIDOperationCompleted == null)) {
                this.GetVehNoFromICIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehNoFromICIDOperationCompleted);
            }
            this.InvokeAsync("GetVehNoFromICID", new object[] {
                        icid}, this.GetVehNoFromICIDOperationCompleted, userState);
        }
        
        private void OnGetVehNoFromICIDOperationCompleted(object arg) {
            if ((this.GetVehNoFromICIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehNoFromICIDCompleted(this, new GetVehNoFromICIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryAvailableVehNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] QueryAvailableVehNo(string vehno) {
            object[] results = this.Invoke("QueryAvailableVehNo", new object[] {
                        vehno});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryAvailableVehNoAsync(string vehno) {
            this.QueryAvailableVehNoAsync(vehno, null);
        }
        
        /// <remarks/>
        public void QueryAvailableVehNoAsync(string vehno, object userState) {
            if ((this.QueryAvailableVehNoOperationCompleted == null)) {
                this.QueryAvailableVehNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAvailableVehNoOperationCompleted);
            }
            this.InvokeAsync("QueryAvailableVehNo", new object[] {
                        vehno}, this.QueryAvailableVehNoOperationCompleted, userState);
        }
        
        private void OnQueryAvailableVehNoOperationCompleted(object arg) {
            if ((this.QueryAvailableVehNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAvailableVehNoCompleted(this, new QueryAvailableVehNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryBillByUserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Bill_OperCard[] QueryBillByUserID(string uid) {
            object[] results = this.Invoke("QueryBillByUserID", new object[] {
                        uid});
            return ((Bill_OperCard[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryBillByUserIDAsync(string uid) {
            this.QueryBillByUserIDAsync(uid, null);
        }
        
        /// <remarks/>
        public void QueryBillByUserIDAsync(string uid, object userState) {
            if ((this.QueryBillByUserIDOperationCompleted == null)) {
                this.QueryBillByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBillByUserIDOperationCompleted);
            }
            this.InvokeAsync("QueryBillByUserID", new object[] {
                        uid}, this.QueryBillByUserIDOperationCompleted, userState);
        }
        
        private void OnQueryBillByUserIDOperationCompleted(object arg) {
            if ((this.QueryBillByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBillByUserIDCompleted(this, new QueryBillByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryAvailableVehNoOfRFFYD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] QueryAvailableVehNoOfRFFYD(string vehno) {
            object[] results = this.Invoke("QueryAvailableVehNoOfRFFYD", new object[] {
                        vehno});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryAvailableVehNoOfRFFYDAsync(string vehno) {
            this.QueryAvailableVehNoOfRFFYDAsync(vehno, null);
        }
        
        /// <remarks/>
        public void QueryAvailableVehNoOfRFFYDAsync(string vehno, object userState) {
            if ((this.QueryAvailableVehNoOfRFFYDOperationCompleted == null)) {
                this.QueryAvailableVehNoOfRFFYDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAvailableVehNoOfRFFYDOperationCompleted);
            }
            this.InvokeAsync("QueryAvailableVehNoOfRFFYD", new object[] {
                        vehno}, this.QueryAvailableVehNoOfRFFYDOperationCompleted, userState);
        }
        
        private void OnQueryAvailableVehNoOfRFFYDOperationCompleted(object arg) {
            if ((this.QueryAvailableVehNoOfRFFYDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAvailableVehNoOfRFFYDCompleted(this, new QueryAvailableVehNoOfRFFYDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TTCardInit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TTCardInit(string icid) {
            object[] results = this.Invoke("TTCardInit", new object[] {
                        icid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TTCardInitAsync(string icid) {
            this.TTCardInitAsync(icid, null);
        }
        
        /// <remarks/>
        public void TTCardInitAsync(string icid, object userState) {
            if ((this.TTCardInitOperationCompleted == null)) {
                this.TTCardInitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTTCardInitOperationCompleted);
            }
            this.InvokeAsync("TTCardInit", new object[] {
                        icid}, this.TTCardInitOperationCompleted, userState);
        }
        
        private void OnTTCardInitOperationCompleted(object arg) {
            if ((this.TTCardInitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TTCardInitCompleted(this, new TTCardInitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ISExistTaskOfVehNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ISExistTaskOfVehNo(string vehno) {
            object[] results = this.Invoke("ISExistTaskOfVehNo", new object[] {
                        vehno});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ISExistTaskOfVehNoAsync(string vehno) {
            this.ISExistTaskOfVehNoAsync(vehno, null);
        }
        
        /// <remarks/>
        public void ISExistTaskOfVehNoAsync(string vehno, object userState) {
            if ((this.ISExistTaskOfVehNoOperationCompleted == null)) {
                this.ISExistTaskOfVehNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISExistTaskOfVehNoOperationCompleted);
            }
            this.InvokeAsync("ISExistTaskOfVehNo", new object[] {
                        vehno}, this.ISExistTaskOfVehNoOperationCompleted, userState);
        }
        
        private void OnISExistTaskOfVehNoOperationCompleted(object arg) {
            if ((this.ISExistTaskOfVehNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISExistTaskOfVehNoCompleted(this, new ISExistTaskOfVehNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVehicInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Vehic GetVehicInfo(string vehno) {
            object[] results = this.Invoke("GetVehicInfo", new object[] {
                        vehno});
            return ((Vehic)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicInfoAsync(string vehno) {
            this.GetVehicInfoAsync(vehno, null);
        }
        
        /// <remarks/>
        public void GetVehicInfoAsync(string vehno, object userState) {
            if ((this.GetVehicInfoOperationCompleted == null)) {
                this.GetVehicInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicInfoOperationCompleted);
            }
            this.InvokeAsync("GetVehicInfo", new object[] {
                        vehno}, this.GetVehicInfoOperationCompleted, userState);
        }
        
        private void OnGetVehicInfoOperationCompleted(object arg) {
            if ((this.GetVehicInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicInfoCompleted(this, new GetVehicInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RFVehCardCancel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result RFVehCardCancel(string icid, string billno, string wpcode, string operid, bool isfix) {
            object[] results = this.Invoke("RFVehCardCancel", new object[] {
                        icid,
                        billno,
                        wpcode,
                        operid,
                        isfix});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void RFVehCardCancelAsync(string icid, string billno, string wpcode, string operid, bool isfix) {
            this.RFVehCardCancelAsync(icid, billno, wpcode, operid, isfix, null);
        }
        
        /// <remarks/>
        public void RFVehCardCancelAsync(string icid, string billno, string wpcode, string operid, bool isfix, object userState) {
            if ((this.RFVehCardCancelOperationCompleted == null)) {
                this.RFVehCardCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRFVehCardCancelOperationCompleted);
            }
            this.InvokeAsync("RFVehCardCancel", new object[] {
                        icid,
                        billno,
                        wpcode,
                        operid,
                        isfix}, this.RFVehCardCancelOperationCompleted, userState);
        }
        
        private void OnRFVehCardCancelOperationCompleted(object arg) {
            if ((this.RFVehCardCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RFVehCardCancelCompleted(this, new RFVehCardCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RoadBrakeLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RoadBrakeLog(string wpcode, string roadbrake) {
            object[] results = this.Invoke("RoadBrakeLog", new object[] {
                        wpcode,
                        roadbrake});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RoadBrakeLogAsync(string wpcode, string roadbrake) {
            this.RoadBrakeLogAsync(wpcode, roadbrake, null);
        }
        
        /// <remarks/>
        public void RoadBrakeLogAsync(string wpcode, string roadbrake, object userState) {
            if ((this.RoadBrakeLogOperationCompleted == null)) {
                this.RoadBrakeLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRoadBrakeLogOperationCompleted);
            }
            this.InvokeAsync("RoadBrakeLog", new object[] {
                        wpcode,
                        roadbrake}, this.RoadBrakeLogOperationCompleted, userState);
        }
        
        private void OnRoadBrakeLogOperationCompleted(object arg) {
            if ((this.RoadBrakeLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RoadBrakeLogCompleted(this, new RoadBrakeLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Result {
        
        private bool flagField;
        
        private string descField;
        
        /// <remarks/>
        public bool Flag {
            get {
                return this.flagField;
            }
            set {
                this.flagField = value;
            }
        }
        
        /// <remarks/>
        public string Desc {
            get {
                return this.descField;
            }
            set {
                this.descField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Vehic {
        
        private string vehnoField;
        
        private bool isfixField;
        
        private string icidField;
        
        private bool enableField;
        
        private bool alarmField;
        
        private bool inDoorField;
        
        private bool cancelFlagField;
        
        /// <remarks/>
        public string Vehno {
            get {
                return this.vehnoField;
            }
            set {
                this.vehnoField = value;
            }
        }
        
        /// <remarks/>
        public bool isfix {
            get {
                return this.isfixField;
            }
            set {
                this.isfixField = value;
            }
        }
        
        /// <remarks/>
        public string icid {
            get {
                return this.icidField;
            }
            set {
                this.icidField = value;
            }
        }
        
        /// <remarks/>
        public bool Enable {
            get {
                return this.enableField;
            }
            set {
                this.enableField = value;
            }
        }
        
        /// <remarks/>
        public bool Alarm {
            get {
                return this.alarmField;
            }
            set {
                this.alarmField = value;
            }
        }
        
        /// <remarks/>
        public bool InDoor {
            get {
                return this.inDoorField;
            }
            set {
                this.inDoorField = value;
            }
        }
        
        /// <remarks/>
        public bool CancelFlag {
            get {
                return this.cancelFlagField;
            }
            set {
                this.cancelFlagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class INVProperty {
        
        private bool availableField;
        
        private string routecodeField;
        
        private bool allowmixField;
        
        private bool needweighField;
        
        private bool monitorweighField;
        
        private decimal overweightField;
        
        /// <remarks/>
        public bool available {
            get {
                return this.availableField;
            }
            set {
                this.availableField = value;
            }
        }
        
        /// <remarks/>
        public string routecode {
            get {
                return this.routecodeField;
            }
            set {
                this.routecodeField = value;
            }
        }
        
        /// <remarks/>
        public bool allowmix {
            get {
                return this.allowmixField;
            }
            set {
                this.allowmixField = value;
            }
        }
        
        /// <remarks/>
        public bool needweigh {
            get {
                return this.needweighField;
            }
            set {
                this.needweighField = value;
            }
        }
        
        /// <remarks/>
        public bool monitorweigh {
            get {
                return this.monitorweighField;
            }
            set {
                this.monitorweighField = value;
            }
        }
        
        /// <remarks/>
        public decimal overweight {
            get {
                return this.overweightField;
            }
            set {
                this.overweightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class InvItem {
        
        private string rowIDField;
        
        private string rowNoField;
        
        private string cBaseIDField;
        
        private string invCodeField;
        
        private string invNameField;
        
        private string specTypeGraphIDField;
        
        private string unitField;
        
        private float planNumField;
        
        private INVProperty propertyField;
        
        /// <remarks/>
        public string RowID {
            get {
                return this.rowIDField;
            }
            set {
                this.rowIDField = value;
            }
        }
        
        /// <remarks/>
        public string RowNo {
            get {
                return this.rowNoField;
            }
            set {
                this.rowNoField = value;
            }
        }
        
        /// <remarks/>
        public string CBaseID {
            get {
                return this.cBaseIDField;
            }
            set {
                this.cBaseIDField = value;
            }
        }
        
        /// <remarks/>
        public string InvCode {
            get {
                return this.invCodeField;
            }
            set {
                this.invCodeField = value;
            }
        }
        
        /// <remarks/>
        public string InvName {
            get {
                return this.invNameField;
            }
            set {
                this.invNameField = value;
            }
        }
        
        /// <remarks/>
        public string SpecTypeGraphID {
            get {
                return this.specTypeGraphIDField;
            }
            set {
                this.specTypeGraphIDField = value;
            }
        }
        
        /// <remarks/>
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        public float PlanNum {
            get {
                return this.planNumField;
            }
            set {
                this.planNumField = value;
            }
        }
        
        /// <remarks/>
        public INVProperty property {
            get {
                return this.propertyField;
            }
            set {
                this.propertyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Bill_Available {
        
        private string billNoField;
        
        private string dHTimeField;
        
        private string vendorField;
        
        private string deptField;
        
        private bool needweighField;
        
        private bool outdateField;
        
        private InvItem[] itemsField;
        
        /// <remarks/>
        public string BillNo {
            get {
                return this.billNoField;
            }
            set {
                this.billNoField = value;
            }
        }
        
        /// <remarks/>
        public string DHTime {
            get {
                return this.dHTimeField;
            }
            set {
                this.dHTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Vendor {
            get {
                return this.vendorField;
            }
            set {
                this.vendorField = value;
            }
        }
        
        /// <remarks/>
        public string Dept {
            get {
                return this.deptField;
            }
            set {
                this.deptField = value;
            }
        }
        
        /// <remarks/>
        public bool needweigh {
            get {
                return this.needweighField;
            }
            set {
                this.needweighField = value;
            }
        }
        
        /// <remarks/>
        public bool outdate {
            get {
                return this.outdateField;
            }
            set {
                this.outdateField = value;
            }
        }
        
        /// <remarks/>
        public InvItem[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AvailableBillInfo {
        
        private int typeField;
        
        private string billTypeIDField;
        
        private string typeDescField;
        
        private string billNumField;
        
        private int wzlxField;
        
        private bool needWeighField;
        
        /// <remarks/>
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string BillTypeID {
            get {
                return this.billTypeIDField;
            }
            set {
                this.billTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string TypeDesc {
            get {
                return this.typeDescField;
            }
            set {
                this.typeDescField = value;
            }
        }
        
        /// <remarks/>
        public string BillNum {
            get {
                return this.billNumField;
            }
            set {
                this.billNumField = value;
            }
        }
        
        /// <remarks/>
        public int wzlx {
            get {
                return this.wzlxField;
            }
            set {
                this.wzlxField = value;
            }
        }
        
        /// <remarks/>
        public bool NeedWeigh {
            get {
                return this.needWeighField;
            }
            set {
                this.needWeighField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Bill_FixVehCard {
        
        private string billNoField;
        
        private string vehIDField;
        
        private string vehTypeField;
        
        private string deptField;
        
        private string iDCardNoField;
        
        private string beginTimeField;
        
        private string endTimeField;
        
        private string inTimeField;
        
        private string outTimeField;
        
        private string memoField;
        
        private string reasonField;
        
        private string zDRField;
        
        private string zDRQField;
        
        private string sHRField;
        
        private string sHRQField;
        
        private bool iSMultiField;
        
        private int flagField;
        
        private string usernameField;
        
        /// <remarks/>
        public string BillNo {
            get {
                return this.billNoField;
            }
            set {
                this.billNoField = value;
            }
        }
        
        /// <remarks/>
        public string VehID {
            get {
                return this.vehIDField;
            }
            set {
                this.vehIDField = value;
            }
        }
        
        /// <remarks/>
        public string VehType {
            get {
                return this.vehTypeField;
            }
            set {
                this.vehTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Dept {
            get {
                return this.deptField;
            }
            set {
                this.deptField = value;
            }
        }
        
        /// <remarks/>
        public string IDCardNo {
            get {
                return this.iDCardNoField;
            }
            set {
                this.iDCardNoField = value;
            }
        }
        
        /// <remarks/>
        public string BeginTime {
            get {
                return this.beginTimeField;
            }
            set {
                this.beginTimeField = value;
            }
        }
        
        /// <remarks/>
        public string EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public string InTime {
            get {
                return this.inTimeField;
            }
            set {
                this.inTimeField = value;
            }
        }
        
        /// <remarks/>
        public string OutTime {
            get {
                return this.outTimeField;
            }
            set {
                this.outTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Memo {
            get {
                return this.memoField;
            }
            set {
                this.memoField = value;
            }
        }
        
        /// <remarks/>
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public string ZDR {
            get {
                return this.zDRField;
            }
            set {
                this.zDRField = value;
            }
        }
        
        /// <remarks/>
        public string ZDRQ {
            get {
                return this.zDRQField;
            }
            set {
                this.zDRQField = value;
            }
        }
        
        /// <remarks/>
        public string SHR {
            get {
                return this.sHRField;
            }
            set {
                this.sHRField = value;
            }
        }
        
        /// <remarks/>
        public string SHRQ {
            get {
                return this.sHRQField;
            }
            set {
                this.sHRQField = value;
            }
        }
        
        /// <remarks/>
        public bool ISMulti {
            get {
                return this.iSMultiField;
            }
            set {
                this.iSMultiField = value;
            }
        }
        
        /// <remarks/>
        public int flag {
            get {
                return this.flagField;
            }
            set {
                this.flagField = value;
            }
        }
        
        /// <remarks/>
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Bill_OperCard {
        
        private string billNoField;
        
        private string userIDField;
        
        private string userNameField;
        
        private string deptField;
        
        private string beginTimeField;
        
        private string endTimeField;
        
        private string iDCardNoField;
        
        private string zDRField;
        
        private string zDRQField;
        
        private string sHRField;
        
        private string sHRQField;
        
        private bool iSZLKField;
        
        private int flagField;
        
        /// <remarks/>
        public string BillNo {
            get {
                return this.billNoField;
            }
            set {
                this.billNoField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Dept {
            get {
                return this.deptField;
            }
            set {
                this.deptField = value;
            }
        }
        
        /// <remarks/>
        public string BeginTime {
            get {
                return this.beginTimeField;
            }
            set {
                this.beginTimeField = value;
            }
        }
        
        /// <remarks/>
        public string EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public string IDCardNo {
            get {
                return this.iDCardNoField;
            }
            set {
                this.iDCardNoField = value;
            }
        }
        
        /// <remarks/>
        public string ZDR {
            get {
                return this.zDRField;
            }
            set {
                this.zDRField = value;
            }
        }
        
        /// <remarks/>
        public string ZDRQ {
            get {
                return this.zDRQField;
            }
            set {
                this.zDRQField = value;
            }
        }
        
        /// <remarks/>
        public string SHR {
            get {
                return this.sHRField;
            }
            set {
                this.sHRField = value;
            }
        }
        
        /// <remarks/>
        public string SHRQ {
            get {
                return this.sHRQField;
            }
            set {
                this.sHRQField = value;
            }
        }
        
        /// <remarks/>
        public bool ISZLK {
            get {
                return this.iSZLKField;
            }
            set {
                this.iSZLKField = value;
            }
        }
        
        /// <remarks/>
        public int flag {
            get {
                return this.flagField;
            }
            set {
                this.flagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ICCard {
        
        private string iCNoField;
        
        private string cardNoField;
        
        private string reguserField;
        
        private string regtimeField;
        
        private int statusField;
        
        private int ictypeField;
        
        private string uIDField;
        
        private string uNameField;
        
        private string dJHField;
        
        /// <remarks/>
        public string ICNo {
            get {
                return this.iCNoField;
            }
            set {
                this.iCNoField = value;
            }
        }
        
        /// <remarks/>
        public string CardNo {
            get {
                return this.cardNoField;
            }
            set {
                this.cardNoField = value;
            }
        }
        
        /// <remarks/>
        public string Reguser {
            get {
                return this.reguserField;
            }
            set {
                this.reguserField = value;
            }
        }
        
        /// <remarks/>
        public string Regtime {
            get {
                return this.regtimeField;
            }
            set {
                this.regtimeField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int Ictype {
            get {
                return this.ictypeField;
            }
            set {
                this.ictypeField = value;
            }
        }
        
        /// <remarks/>
        public string UID {
            get {
                return this.uIDField;
            }
            set {
                this.uIDField = value;
            }
        }
        
        /// <remarks/>
        public string UName {
            get {
                return this.uNameField;
            }
            set {
                this.uNameField = value;
            }
        }
        
        /// <remarks/>
        public string DJH {
            get {
                return this.dJHField;
            }
            set {
                this.dJHField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ISFixVehCompletedEventHandler(object sender, ISFixVehCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISFixVehCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ISFixVehCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void RFVehCardAssignCompletedEventHandler(object sender, RFVehCardAssignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RFVehCardAssignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RFVehCardAssignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetRegOperListCompletedEventHandler(object sender, GetRegOperListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegOperListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegOperListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetVehTypeByVehNoCompletedEventHandler(object sender, GetVehTypeByVehNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehTypeByVehNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehTypeByVehNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetCardOwnerListCompletedEventHandler(object sender, GetCardOwnerListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardOwnerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCardOwnerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void RegistryCardCompletedEventHandler(object sender, RegistryCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegistryCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegistryCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UpdateCardNoCompletedEventHandler(object sender, UpdateCardNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCardNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCardNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void RegistryLostCompletedEventHandler(object sender, RegistryLostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegistryLostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegistryLostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void RegistryOutCompletedEventHandler(object sender, RegistryOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegistryOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegistryOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CardInitCompletedEventHandler(object sender, CardInitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CardInitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CardInitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void OneCardInitCompletedEventHandler(object sender, OneCardInitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OneCardInitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OneCardInitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetCardCompletedEventHandler(object sender, GetCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ICCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ICCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetCardExCompletedEventHandler(object sender, GetCardExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCardExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ICCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ICCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void QueryCardExCompletedEventHandler(object sender, QueryCardExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCardExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCardExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ICCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ICCard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetOperCardBillCompletedEventHandler(object sender, GetOperCardBillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperCardBillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperCardBillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Bill_OperCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bill_OperCard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetOperCardBillExCompletedEventHandler(object sender, GetOperCardBillExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperCardBillExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperCardBillExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Bill_OperCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bill_OperCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void OperCardAssignCompletedEventHandler(object sender, OperCardAssignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OperCardAssignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OperCardAssignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetFixVehCardBillCompletedEventHandler(object sender, GetFixVehCardBillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFixVehCardBillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFixVehCardBillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Bill_FixVehCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bill_FixVehCard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetFixVehCardBillExCompletedEventHandler(object sender, GetFixVehCardBillExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFixVehCardBillExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFixVehCardBillExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Bill_FixVehCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bill_FixVehCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void FixVehCardAssignCompletedEventHandler(object sender, FixVehCardAssignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FixVehCardAssignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FixVehCardAssignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetVehTypeListCompletedEventHandler(object sender, GetVehTypeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehTypeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehTypeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetAvailableVehNoCompletedEventHandler(object sender, GetAvailableVehNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableVehNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableVehNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetLoseCardVehNoCompletedEventHandler(object sender, GetLoseCardVehNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoseCardVehNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoseCardVehNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetAvailableBillInfosCompletedEventHandler(object sender, GetAvailableBillInfosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableBillInfosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableBillInfosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AvailableBillInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AvailableBillInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetBill_ArrivesCompletedEventHandler(object sender, GetBill_ArrivesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBill_ArrivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBill_ArrivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Bill_Available[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bill_Available[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetBill_ArrivesExCompletedEventHandler(object sender, GetBill_ArrivesExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBill_ArrivesExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBill_ArrivesExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Bill_Available[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bill_Available[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetBill_FYDCompletedEventHandler(object sender, GetBill_FYDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBill_FYDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBill_FYDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Bill_Available[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bill_Available[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetBill_QTWZCompletedEventHandler(object sender, GetBill_QTWZCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBill_QTWZCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBill_QTWZCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Bill_Available[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bill_Available[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetBill_XHWZCompletedEventHandler(object sender, GetBill_XHWZCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBill_XHWZCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBill_XHWZCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Bill_Available[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bill_Available[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GenNoticeBillCompletedEventHandler(object sender, GenNoticeBillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenNoticeBillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenNoticeBillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetVehNoFromICIDCompletedEventHandler(object sender, GetVehNoFromICIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehNoFromICIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehNoFromICIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void QueryAvailableVehNoCompletedEventHandler(object sender, QueryAvailableVehNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAvailableVehNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAvailableVehNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void QueryBillByUserIDCompletedEventHandler(object sender, QueryBillByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBillByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBillByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Bill_OperCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bill_OperCard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void QueryAvailableVehNoOfRFFYDCompletedEventHandler(object sender, QueryAvailableVehNoOfRFFYDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAvailableVehNoOfRFFYDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAvailableVehNoOfRFFYDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void TTCardInitCompletedEventHandler(object sender, TTCardInitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TTCardInitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TTCardInitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ISExistTaskOfVehNoCompletedEventHandler(object sender, ISExistTaskOfVehNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISExistTaskOfVehNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ISExistTaskOfVehNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetVehicInfoCompletedEventHandler(object sender, GetVehicInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vehic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vehic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void RFVehCardCancelCompletedEventHandler(object sender, RFVehCardCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RFVehCardCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RFVehCardCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void RoadBrakeLogCompletedEventHandler(object sender, RoadBrakeLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RoadBrakeLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RoadBrakeLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591